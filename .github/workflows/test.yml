name: CI

on:
  push:
    branches: [ main ]
  pull_request:

concurrency: 
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest]
        toolchain: [stable, 1.56.0]

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: "Install ${{ matrix.toolchain }} toolchain"
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}

      - name: Run tests
        run: cargo test --verbose --workspace --exclude cargo-near-integration-tests

  integration-test:
    name: "test batch #${{ matrix.batch }} (${{ matrix.platform }}, ${{ matrix.toolchain }})"
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest]
        toolchain: [stable, 1.56.0]
        batch: [1, 2, 3]

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: "Install ${{ matrix.toolchain }} toolchain"
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}

      - name: Run tests
        run: |
          cargo test --package cargo-near-integration-tests -- --list --format terse \
            | grep ': test$' | sed 's/\(.*\): .*$/\1/' \
            > tests
          share=$((`wc -l < tests` / 3))
          units=$(tail -n +$(((share*(${{ matrix.batch }}-1))+1)) tests | head -n +$share | tr '\n' ' ')
          cmd="cargo test --verbose --package cargo-near-integration-tests -- $units"
          echo " \$ $cmd"
          eval $cmd

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Check Formatting
        run: cargo fmt -- --check

      - name: Check Clippy
        run: cargo clippy --tests -- -Dclippy::all

  audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2

      - name: Install Audit Tool
        run: cargo install cargo-audit

      - name: Run Audit Tool
        run: cargo audit --ignore RUSTSEC-2020-0071
